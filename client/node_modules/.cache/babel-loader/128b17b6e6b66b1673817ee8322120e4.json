{"ast":null,"code":"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    //Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    //Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"names":["decode","AuthService","getProfile","getToken","loggedIn","token","isTokenExpired","decoded","exp","Date","now","err","localStorage","getItem","login","idToken","setItem","window","location","assign","logout","removeItem"],"sources":["C:/Users/jvit1/Desktop/projects/list-hub/client/src/utils/auth.js"],"sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now()/ 1000) {\n                return true;\n            } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        //Saves user token to localStorage\n        localStorage.setItem('id_token', idToken);\n\n        window.location.assign('/');\n    }\n\n    logout() {\n        //Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n\n        window.location.assign('/');\n    }\n}\n\nexport default new AuthService();"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,YAAnB;;AAEA,MAAMC,WAAN,CAAkB;EACdC,UAAU,GAAG;IACT,OAAOF,MAAM,CAAC,KAAKG,QAAL,EAAD,CAAb;EACH;;EAEDC,QAAQ,GAAG;IACP;IACA,MAAMC,KAAK,GAAG,KAAKF,QAAL,EAAd;IACA,OAAO,CAAC,CAACE,KAAF,IAAW,CAAC,KAAKC,cAAL,CAAoBD,KAApB,CAAnB;EACH;;EAEDC,cAAc,CAACD,KAAD,EAAQ;IAClB,IAAI;MACA,MAAME,OAAO,GAAGP,MAAM,CAACK,KAAD,CAAtB;;MACA,IAAIE,OAAO,CAACC,GAAR,GAAcC,IAAI,CAACC,GAAL,KAAY,IAA9B,EAAoC;QAChC,OAAO,IAAP;MACH,CAFD,MAEO,OAAO,KAAP;IACV,CALD,CAKE,OAAOC,GAAP,EAAY;MACV,OAAO,KAAP;IACH;EACJ;;EAEDR,QAAQ,GAAG;IACP;IACA,OAAOS,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAP;EACH;;EAEDC,KAAK,CAACC,OAAD,EAAU;IACX;IACAH,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCD,OAAjC;IAEAE,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;EACH;;EAEDC,MAAM,GAAG;IACL;IACAR,YAAY,CAACS,UAAb,CAAwB,UAAxB;IAEAJ,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;EACH;;AAvCa;;AA0ClB,eAAe,IAAIlB,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}